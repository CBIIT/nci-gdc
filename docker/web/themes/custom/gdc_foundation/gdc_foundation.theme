<?php

/**
 * @file
 * Add your custom theme override functions here.
 */
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;
use Drupal\Core\Database\Query\AlterableInterface;

/**
 * Implements hook_preprocess_block().
 */
function gdc_foundation_preprocess_block(&$variables) {
  // Get the machine name of the view (e.g., 'publications_group' or 'faqs').
  //$view_name = $variables['view_name']; // This variable should be set in your block or template.

  // Get the URL of the view based on the machine name.
  //$view_url = \Drupal::service('path.alias_manager')->getAliasByPath($view_name);

  // Add the view URL as a variable to the block template.
  //$variables['view_url'] = $view_url;
}

/**
 * Implements template_preprocess_html().
 *
 * Adds additional classes.
 */
function gdc_foundation_preprocess_html(&$variables) {
}

/**
 * Implements template_preprocess_node.
 *
 * Add template suggestions and classes.
 */
function gdc_foundation_preprocess_node(&$variables) {
}

/**
 * Implements template_preprocess_page.
 *
 * Add convenience variables and template suggestions.
 */
function gdc_foundation_preprocess_page(&$variables) {
}

/**
 * Implements template_preprocess_views_view().
 */
function gdc_foundation_preprocess_views_view(&$variables) {       
    $view = $variables['view'];
    $id = $variables['id'];
    /* Do publication group things here */
    if ($id=='publication_group') {
      $variables['#attached']['library'][] = 'gdc_foundation/publications';
      $variables['totalRowCount']=count($view->result);
    }

    if ($id=='news') {
      $variables['#attached']['library'][] = 'gdc_foundation/news';
    }

    if ($id=='faqs') {
      $variables['#attached']['library'][] = 'gdc_foundation/faqs';
    }

    if ($id=='community_tools') {                                                                         
      $variables['#attached']['library'][] = 'gdc_foundation/community_tools';                              
      $variables['totalRowCount']=count($view->result);                    

    } 
    if ($id=='biography') {
      $variables['#attached']['library'][] = 'gdc_foundation/biography';
    } 
}


/**
 * Implements hook_theme_suggestions_HOOK_alter() for select templates.
 */
function gdc_foundation_theme_suggestions_select_alter(array &$suggestions, array $variables) {
  if (\Drupal::routeMatch()->getRouteName() == 'view.publication_group.page_1') {
    $view_id = \Drupal::routeMatch()->getParameter('view_id');
    $suggestions[] = 'select__' . $view_id;
  }
}

/**
 * Implements hook_query_alter() for query.
 */
function hook_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  dump($view);
}


/**
 * Implements hook_preprocess_page.
 * Sets title of page to 'Video: ' + title
 */
function gdc_foundation_preprocess_page_title(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    // Load the label of the bundle
    if ($node->bundle() == 'video') {
     // Set the page title
     $variables['title'] = 'Video: ' . $node->getTitle();
    }
  }
}

/**
* Implements hook_views_pre_render().
*/
function gdc_foundation_views_pre_render(ViewExecutable $view) {
  if (isset($view) && ($view->storage->id() == 'news')) {
    $view->element['#attached']['library'][] = 'custom/front_page';
  }
  if (isset($view) && ($view->storage->id() == 'biography')) {
    $index=0;
    $rows = $view->result;
    foreach ($rows as $row) {
        $entity = $row->_entity;
        $relationship_entities = $row->_relationship_entities;
        $person_entity = $relationship_entities['field_person_ref'];
        $ins_status = $entity->get('status')->value;
        $person_status = $person_entity->get('status')->value;
        // remove any entries that are unpublished and former is unchecked //
        if (isset($ins_status) && isset($person_status) && ($ins_status=='0' || $person_status=='0')) {
            $former=$person_entity->get('field_former')->value;
            $title=$person_entity->get('title')->value;
            $date_range = $person_entity->get('field_date_range')->value;
            if (!$former) {
                unset($view->result[$index]);
            }
        }
        $index+=1;
    }
  }
}

